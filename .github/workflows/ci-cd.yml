name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 35_2_DjangoDRF
  pull_request:
    branches:
      - main
      - develop
      - homework-branch
      - 35_2_DjangoDRF


jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: mydatabase
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        DB_NAME: mydatabase
        DB_USER: postgres
        DB_PASSWORD: password
        DB_HOST: localhost
        DB_PORT: 5432
      run: |
        source venv/bin/activate
        python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Clear cache
      run: |
        rm -rf /root/.cache/pip
        rm -rf /root/Homework_DRF

    - name: Deploy to server
      env:
        SSH_PASS: ${{ secrets.SSH_PASSWORD }}
      run: |
        sshpass -p "${SSH_PASS}" ssh -o StrictHostKeyChecking=no root@185.237.165.164 "
          cd /root/Homework_DRF &&
          git pull &&
          poetry install &&
          sudo systemctl restart nginx
        "
